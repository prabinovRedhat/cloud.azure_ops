---
- name: Test role cloud.azure_ops.azure_manage_resource_group
  block:
    - name: Print a message 0
      ansible.builtin.debug:
      msg: "This is a simple print statement in Ansible"

    # Test: Create Resource Group without locking
    - name: Create Resource Group without locking
      ansible.builtin.include_role:
        name: cloud.azure_ops.azure_manage_resource_group
      vars:
        azure_manage_resource_group_operation: create
        azure_manage_resource_group_name: "{{ azure_manage_resource_group_name }}"
        azure_manage_resource_group_region: "{{ azure_manage_resource_group_region }}"
        azure_manage_resource_group_tags: "{{ azure_manage_resource_group_tags }}"

    - name: Get Resource Group info
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ azure_manage_resource_group_name }}"
      register: rg_info

    - name: Assert that Resource Group was created without locking
      ansible.builtin.assert:
        that:
          - rg_info.resourcegroups | length == 1
          - rg_info.resourcegroups.name == azure_manage_resource_group_name
          - rg_info.resourcegroups.location == azure_manage_resource_group_region
          - rg_info.resourcegroups.tags == azure_manage_resource_group_tags
          - azure_manage_resource_group_lock_resource_group == false

    # Test: Delete Resource Group without locking
    - name: Delete Resource Group without locking
      ansible.builtin.include_role:
        name: cloud.azure_ops.azure_manage_resource_group
      vars:
        azure_manage_resource_group_operation: delete
        azure_manage_resource_group_name: "{{ azure_manage_resource_group_name }}"

    - name: Get Resource Group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ azure_manage_resource_group_name }}"
      register: rg_info

    - name: Assert that Resource Group was deleted without locking
      ansible.builtin.assert:
        that:
          - rg_info.resourcegroups | length == 0

    # Test: Create Resource Group with locking
    - name: Create Resource Group with locking
      ansible.builtin.include_role:
        name: cloud.azure_ops.azure_manage_resource_group
      vars:
        azure_manage_resource_group_operation: create
        azure_manage_resource_group_name: "{{ azure_manage_resource_group_name }}"
        azure_manage_resource_group_region: "{{ azure_manage_resource_group_region }}"
        azure_manage_resource_group_tags: "{{ azure_manage_resource_group_tags }}"
        azure_manage_resource_group_lock_resource_group: true

    - name: Get Resource Group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ azure_manage_resource_group_name }}"
      register: rg_info

    - name: Assert that Resource Group was created with locking
      ansible.builtin.assert:
        that:
          - rg_info.resourcegroups | length == 1
          - rg_info.resourcegroups.name == azure_manage_resource_group_name
          - rg_info.resourcegroups.location == azure_manage_resource_group_region
          - rg_info.resourcegroups.tags == azure_manage_resource_group_tags
          - azure_manage_resource_group_lock_resource_group == true

    # Test: Delete Resource Group with force delete when locked
    - name: Delete Resource Group with force delete when locked
      ansible.builtin.include_role:
        name: cloud.azure_ops.azure_manage_resource_group
      vars:
        azure_manage_resource_group_operation: delete
        azure_manage_resource_group_name: "{{ azure_manage_resource_group_name }}"
        azure_manage_resource_group_force_delete_locked: true

    - name: Get Resource Group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ azure_manage_resource_group_name }}"
      register: rg_info

    - name: Assert that Resource Group was deleted with force delete when locked
      ansible.builtin.assert:
        that:
          - rg_info.resourcegroups | length == 0

  always:
    - name: Delete Resource Group
      azure.azcollection.azure_rm_resourcegroup:
        name: "{{ azure_manage_resource_group_name }}"
        state: absent